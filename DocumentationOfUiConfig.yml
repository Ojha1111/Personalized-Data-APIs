openapi: "3.0.3"
info:
  title: "PersonalizedDataAPI API"
  description: "PersonalizedDataAPI API"
  version: "1.0.0"
servers:
  - url: "https://PersonalizedDataAPI"
paths:
  /api/v3/internal/shoppers:
    post:
      summary: "POST api/v3/internal/shoppers"
      operationId: "storeShopperData"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShopperDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/v3/internal/shoppers/{shopperId}:
    get:
      summary: "GET api/v3/internal/shoppers/{shopperId}"
      operationId: "getShopperData"
      parameters:
        - name: "shopperId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ShopperDTO"
  /api/v3/product-metadata:
    post:
      summary: "POST api/v3/product-metadata"
      operationId: "createProductMetadata"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductMetadataDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/v3/product-metadata/{productId}:
    get:
      summary: "GET api/v3/product-metadata/{productId}"
      operationId: "getProductMetadataById"
      parameters:
        - name: "productId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductMetadataDTO"
  /api/v3/external/shoppers/{shopperId}/products:
    get:
      summary: "GET api/v3/external/shoppers/{shopperId}/products"
      operationId: "getProductsByShopperWithFilters"
      parameters:
        - name: "shopperId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "category"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "brand"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "10"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  type: "string"
components:
  schemas:
    ProductMetadataDTO:
      type: "object"
      properties:
        productId:
          type: "string"
        category:
          type: "string"
        brand:
          type: "string"
    ShelfItemDTO:
      type: "object"
      properties:
        productId:
          type: "string"
        relevancyScore:
          type: "number"
          format: "double"
        productMetadata:
          $ref: "#/components/schemas/ProductMetadataDTO"
    ShopperDTO:
      type: "object"
      properties:
        shopperId:
          type: "string"
        shelf:
          type: "array"
          items:
            $ref: "#/components/schemas/ShelfItemDTO"